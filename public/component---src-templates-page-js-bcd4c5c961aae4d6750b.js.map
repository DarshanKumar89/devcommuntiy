{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_post__WEBPACK_IMPORTED_MODULE_4__","BlogPostTemplate","_ref","data","pageContext","_data$markdownRemark","markdownRemark","_data$markdownRemark$","frontmatter","title","date","path","author","coverImage","excerpt","tags","autoExcerpt","id","html","next","previous","a","createElement","description","key","previousPost","nextPost","propTypes","PropTypes","object","isRequired","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAQMa,EAAmB,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAAkBC,EAM9CF,EAAKG,eANyCC,EAAAF,EAEhDG,YAAeC,EAFiCF,EAEjCE,MAAOC,EAF0BH,EAE1BG,KAAMC,EAFoBJ,EAEpBI,KAAMC,EAFcL,EAEdK,OAAQC,EAFMN,EAENM,WAAYC,EAFNP,EAEMO,QAASC,EAFfR,EAEeQ,KACtDC,EAHuCX,EAGhDS,QACAG,EAJgDZ,EAIhDY,GACAC,EALgDb,EAKhDa,KAEMC,EAAmBf,EAAnBe,KAAMC,EAAahB,EAAbgB,SAEd,OACE1B,EAAA2B,EAAAC,cAACvB,EAAA,EAAD,KACEL,EAAA2B,EAAAC,cAACxB,EAAA,EAAD,CAAKW,MAAOA,EAAOc,YAAaT,GAAWE,IAC3CtB,EAAA2B,EAAAC,cAACtB,EAAA,EAAD,CACEwB,IAAKP,EACLR,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZK,KAAMA,EACNH,KAAMA,EACNU,aAAcL,EACdM,SAAUP,MAMHlB,YAEfA,EAAiB0B,UAAY,CAC3BxB,KAAMyB,IAAUC,OAAOC,WACvB1B,YAAawB,IAAUG,MAAM,CAC3BZ,KAAMS,IAAUC,OAChBT,SAAUQ,IAAUC,UAIjB,IAAMrC,EAAS","file":"component---src-templates-page-js-bcd4c5c961aae4d6750b.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const {\n    frontmatter: { title, date, path, author, coverImage, excerpt, tags },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark\n  const { next, previous } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt || autoExcerpt} />\n      <Post\n        key={id}\n        title={title}\n        date={date}\n        path={path}\n        author={author}\n        coverImage={coverImage}\n        html={html}\n        tags={tags}\n        previousPost={previous}\n        nextPost={next}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    next: PropTypes.object,\n    previous: PropTypes.object,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        path\n        author\n        excerpt\n        tags\n        coverImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`\n"],"sourceRoot":""}